#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ protobuf —Ñ–∞–π–ª–æ–≤
set -e

echo "üîß Generating protobuf files..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ protoc
if ! command -v protoc &> /dev/null; then
    echo "‚ùå protoc –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Protocol Buffers compiler:"
    echo "   Ubuntu/Debian: sudo apt install protobuf-compiler"
    echo "   macOS: brew install protobuf"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ protoc-gen-go –∏ protoc-gen-go-grpc
if ! command -v protoc-gen-go &> /dev/null; then
    echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º protoc-gen-go..."
    go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
fi

if ! command -v protoc-gen-go-grpc &> /dev/null; then
    echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º protoc-gen-go-grpc..."
    go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
fi

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–ª—è auth-service
echo "üìù Generating auth-service protobuf..."
cd auth-service
protoc --go_out=. --go_opt=paths=source_relative \
       --go-grpc_out=. --go-grpc_opt=paths=source_relative \
       internal/authpb/auth.proto

echo "‚úÖ Generated:"
echo "  - internal/authpb/auth.pb.go"
echo "  - internal/authpb/auth_grpc.pb.go"
cd ..

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–ª—è core-service
echo "üìù Generating core-service protobuf..."
cd core-service
protoc --go_out=. --go_opt=paths=source_relative \
       --go-grpc_out=. --go-grpc_opt=paths=source_relative \
       internal/corepb/auth.proto

echo "‚úÖ Generated:"
echo "  - internal/corepb/auth.pb.go"
echo "  - internal/corepb/auth_grpc.pb.go"
cd ..

echo "üéâ All protobuf files generated successfully!"