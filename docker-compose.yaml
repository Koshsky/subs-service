version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: subs_db
    env_file: .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - subs_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  migrator:
    image: migrate/migrate:v4.16.2
    container_name: subs_migrator
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations
    networks:
      - subs_net
    command:
      - -path=/migrations
      - -database=postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}?sslmode=disable
      - up
    restart: on-failure

  auth-service:
    build:
      context: .
      dockerfile: ./auth-service/Dockerfile
    container_name: subs_auth_service
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully
    ports:
      - "${AUTH_PORT:-50051}:${AUTH_PORT:-50051}"
      - "${AUTH_HEALTH_PORT:-8081}:8081"
    networks:
      - subs_net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8081/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  core-service:
    build:
      context: .
      dockerfile: ./core-service/Dockerfile
    container_name: subs_service
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully
      auth-service:
        condition: service_healthy
    ports:
      - "${CORE_PORT:-8080}:${CORE_PORT:-8080}"
    networks:
      - subs_net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:${CORE_PORT:-8080}/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  postgres_data:

networks:
  subs_net:
    name: subs_net
    driver: bridge
    attachable: true