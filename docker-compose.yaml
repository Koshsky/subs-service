version: '3.8'

services:
  # Auth Service Database
  auth-db:
    image: postgres:15-alpine
    container_name: auth_db
    env_file: .env
    environment:
      POSTGRES_USER: ${AUTH_DB_USER:-auth_user}
      POSTGRES_PASSWORD: ${AUTH_DB_PASSWORD:-auth_pass}
      POSTGRES_DB: ${AUTH_DB_NAME:-auth_db}
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - subs_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${AUTH_DB_USER:-auth_user} -d ${AUTH_DB_NAME:-auth_db}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Core Service Database
  core-db:
    image: postgres:15-alpine
    container_name: core_db
    env_file: .env
    environment:
      POSTGRES_USER: ${CORE_DB_USER:-core_user}
      POSTGRES_PASSWORD: ${CORE_DB_PASSWORD:-core_pass}
      POSTGRES_DB: ${CORE_DB_NAME:-core_db}
    volumes:
      - core_postgres_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - subs_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${CORE_DB_USER:-core_user} -d ${CORE_DB_NAME:-core_db}"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Auth Database Migrator
  auth-migrator:
    image: migrate/migrate:v4.16.2
    container_name: auth_migrator
    env_file: .env
    depends_on:
      auth-db:
        condition: service_healthy
    volumes:
      - ./auth-service/migrations:/migrations
    networks:
      - subs_net
    command:
      - -path=/migrations
      - -database=postgres://${AUTH_DB_USER:-auth_user}:${AUTH_DB_PASSWORD:-auth_pass}@auth-db:5432/${AUTH_DB_NAME:-auth_db}?sslmode=disable
      - up
    restart: on-failure

  # Core Database Migrator
  core-migrator:
    image: migrate/migrate:v4.16.2
    container_name: core_migrator
    env_file: .env
    depends_on:
      core-db:
        condition: service_healthy
    volumes:
      - ./core-service/migrations:/migrations
    networks:
      - subs_net
    command:
      - -path=/migrations
      - -database=postgres://${CORE_DB_USER:-core_user}:${CORE_DB_PASSWORD:-core_pass}@core-db:5432/${CORE_DB_NAME:-core_db}?sslmode=disable
      - up
    restart: on-failure

  auth-service:
    build:
      context: .
      dockerfile: ./auth-service/Dockerfile
    container_name: subs_auth_service
    env_file: .env
    depends_on:
      auth-db:
        condition: service_healthy
      auth-migrator:
        condition: service_completed_successfully
    ports:
      - "${AUTH_PORT:-50051}:${AUTH_PORT:-50051}"
      - "${AUTH_HEALTH_PORT:-8081}:8081"
    networks:
      - subs_net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8081/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  core-service:
    build:
      context: .
      dockerfile: ./core-service/Dockerfile
    container_name: subs_service
    env_file: .env
    depends_on:
      core-db:
        condition: service_healthy
      core-migrator:
        condition: service_completed_successfully
      auth-service:
        condition: service_healthy
    ports:
      - "${CORE_PORT:-8080}:${CORE_PORT:-8080}"
    networks:
      - subs_net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:${CORE_PORT:-8080}/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  auth_postgres_data:
  core_postgres_data:

networks:
  subs_net:
    name: subs_net
    driver: bridge
    attachable: true